quarkus.http.port = 8080

# PostgreSQL database automatically created by Dev Services with the following settings
quarkus.devservices.enabled = true
quarkus.datasource.devservices.port = 5432
quarkus.datasource.devservices.db-name = quarkus
quarkus.datasource.devservices.username = quarkus
quarkus.datasource.devservices.password = quarkus

quarkus.hibernate-orm.schema-management.strategy = drop-and-create
quarkus.hibernate-orm.log.sql = true

quarkus.langchain4j.mcp.template-generator.transport-type = http
quarkus.langchain4j.mcp.template-generator.url = http://localhost:8080/mcp/sse

quarkus.langchain4j.log-requests = true
quarkus.langchain4j.log-responses = true
quarkus.mcp.server.traffic-logging.enabled = true
quarkus.mcp.server.traffic-logging.text-limit = 10000

# The chat model to use. Set gpt-oss is the default chat model.
quarkus.langchain4j.ollama.chat-model.model-id = gpt-oss
# Global timeout for requests to LLM APIs
quarkus.langchain4j.timeout = 60s
# The temperature to use for the chat model. Temperature is a value between 0 and 1, where lower values make the model more deterministic and higher values make it more creative.
quarkus.langchain4j.temperature = 0.2
# The REST Assured client timeout for testing.
quarkus.http.test-timeout = 60s

# Enable Package Manager Installation. This will override "package-manager" config.
quarkus.quinoa.package-manager-install = true
# The NodeJS Version to install locally to the project. Required when package-manager-install is enabled.
quarkus.quinoa.package-manager-install.node-version = 22.12.0
# The NPM version to install and use. By default, the version is provided by NodeJS.
quarkus.quinoa.package-manager-install.npm-version = 10.9.0

# To enable the UI live-coding dev server, set a start script and set the port in the app config. Quinoa will transparently proxy relevant requests to the given port
quarkus.quinoa.dev-server-port = 4200
# Single Page application routing; when enabled, to allow SPA routing, all relevant requests will be internally re-routed to index.html, this way the javascript can take care of the route inside the web-application.
quarkus.quinoa.enable-spa-routing = true

# The allowed origins for CORS requests. This is the URL of the Angular client.
quarkus.http.cors.origins = http://localhost:4200
# HTTP headers allowed for CORS Comma separated list of valid headers. ex: X-Custom,Content-Disposition The filter allows any header if this is not set. default: returns any requested header as valid
quarkus.http.cors.headers = accept, authorization, content-type, x-requested-with
# HTTP methods allowed for CORS. In the current application, we only need GET requests.
quarkus.http.cors.methods = GET

# The location of the template files; can be relative or absolute path.
app.templates.location = ./templates
