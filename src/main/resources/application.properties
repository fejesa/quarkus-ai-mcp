quarkus.http.port = 8080

# PostgreSQL database automatically created by Dev Services with the following settings
quarkus.devservices.enabled = true
quarkus.datasource.devservices.port = 5432
quarkus.datasource.devservices.db-name = quarkus
quarkus.datasource.devservices.username = quarkus
quarkus.datasource.devservices.password = quarkus

quarkus.hibernate-orm.schema-management.strategy = drop-and-create
quarkus.hibernate-orm.log.sql = true

quarkus.langchain4j.log-requests = true
quarkus.langchain4j.log-responses = true

# Enable Package Manager Installation. This will override "package-manager" config.
quarkus.quinoa.package-manager-install = true
# The NodeJS Version to install locally to the project. Required when package-manager-install is enabled.
quarkus.quinoa.package-manager-install.node-version = 22.12.0
# The NPM version to install and use. By default, the version is provided by NodeJS.
quarkus.quinoa.package-manager-install.npm-version = 10.9.0

# To enable the UI live-coding dev server, set a start script and set the port in the app config. Quinoa will transparently proxy relevant requests to the given port
quarkus.quinoa.dev-server-port = 4200
# Single Page application routing; when enabled, to allow SPA routing, all relevant requests will be internally re-routed to index.html, this way the javascript can take care of the route inside the web-application.
quarkus.quinoa.enable-spa-routing = true

# The allowed origins for CORS requests. This is the URL of the Angular client.
quarkus.http.cors.origins = http://localhost:4200
# HTTP headers allowed for CORS Comma separated list of valid headers. ex: X-Custom,Content-Disposition The filter allows any header if this is not set. default: returns any requested header as valid
quarkus.http.cors.headers = accept, authorization, content-type, x-requested-with
# HTTP methods allowed for CORS. In the current application, we only need GET requests.
quarkus.http.cors.methods = GET
