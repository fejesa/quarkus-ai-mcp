quarkus.http.port = 8080

# PostgreSQL database automatically created by Dev Services with the following settings
quarkus.devservices.enabled = true
quarkus.datasource.devservices.port = 5432
quarkus.datasource.devservices.db-name = quarkus
quarkus.datasource.devservices.username = quarkus
quarkus.datasource.devservices.password = quarkus

quarkus.hibernate-orm.schema-management.strategy = drop-and-create
quarkus.hibernate-orm.log.sql = true

# We use HTTP transport for client-server communication in MCP context
quarkus.langchain4j.mcp.template-generator.transport-type = http
# The URL of the SSE endpoint. This only applies to MCP clients using the HTTP transport.
quarkus.langchain4j.mcp.template-generator.url = http://localhost:8080/mcp/sse

# Enable logging of client requests and responses to/from LLM APIs
quarkus.langchain4j.log-requests = true
quarkus.langchain4j.log-responses = true
 # If set to true then JSON messages received/sent are logged.
quarkus.mcp.server.traffic-logging.enabled = true
# The number of characters of a text message which will be logged if traffic logging is enabled, default is 200 characters.
quarkus.mcp.server.traffic-logging.text-limit = 10000

# The chat model to use. Set gpt-oss is the default chat model.
quarkus.langchain4j.ollama.chat-model.model-id = gpt-oss
# Global timeout for requests to LLM APIs
quarkus.langchain4j.timeout = 60s
# The temperature to use for the chat model. Temperature is a value between 0 and 1, where lower values make the model more deterministic and higher values make it more creative.
quarkus.langchain4j.temperature = 0.2

# Defines the application path that serves as the base URI for all JAX-RS resource URIs provided by @Path annotations
quarkus.rest.path = /
# The name of the generated OpenAPI file; defaults are openapi.json and openapi.yaml. The schema is automatically generated by Quarkus when the application is started.
quarkus.smallrye-openapi.store-schema-file-name = message-template
# The title of the generated OpenAPI schema document. This title is used in the generated OpenAPI service.
quarkus.smallrye-openapi.info-title = MessageTemplateAPI
# The generated OpenAPI schema documents will be stored here on build. We use this document to generate the Angular client using Oval lib
quarkus.smallrye-openapi.store-schema-directory = src/main/webui/api

# Enable Package Manager Installation. This will override "package-manager" config.
quarkus.quinoa.package-manager-install = true
# The NodeJS Version to install locally to the project. Required when package-manager-install is enabled.
quarkus.quinoa.package-manager-install.node-version = 22.12.0
# The NPM version to install and use. By default, the version is provided by NodeJS.
quarkus.quinoa.package-manager-install.npm-version = 10.9.0

# To enable the UI live-coding dev server, set a start script and set the port in the app config. Quinoa will transparently proxy relevant requests to the given port
quarkus.quinoa.dev-server-port = 4200
# Single Page application routing; when enabled, to allow SPA routing, all relevant requests will be internally re-routed to index.html, this way the javascript can take care of the route inside the web-application.
quarkus.quinoa.enable-spa-routing = true

# Enable the CORS filter. This will allow the Angular client to access the Quarkus API.
quarkus.http.cors.enabled = true
# The allowed origins for CORS requests. This is the URL of the Angular client.
quarkus.http.cors.origins = http://localhost:4200
# HTTP headers allowed for CORS Comma separated list of valid headers. ex: X-Custom,Content-Disposition The filter allows any header if this is not set. default: returns any requested header as valid
quarkus.http.cors.headers = accept, authorization, content-type, x-requested-with
# HTTP methods allowed for CORS.
quarkus.http.cors.methods = POST,GET,PUT,DELETE

# The location of the template files; can be relative or absolute path.
app.templates.location = ./templates
